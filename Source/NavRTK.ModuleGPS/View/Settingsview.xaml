<UserControl x:Class="NavRTK.ModuleGPS.View.SettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:converter="clr-namespace:NavRTK.ModuleGPS.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="1024" d:DesignWidth="1280">
    <UserControl.Resources>
        <!--Converters-->
        <converter:IdColorConverter x:Key="IdColorConverter"/>
        <converter:DefaultConverter x:Key="DefaultConverter"/>
        <converter:NamePortColorConverter x:Key="NamePortColorConverter"/>
        <!-- Style for button -->
        <Style TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Width"  Value="40"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="secondColor" Color="#2672EC" />
        <!-- ListPort DataTemplate -->
        <DataTemplate x:Key="DataTemplateListPort">
			<Grid Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="80"/>
                    <ColumnDefinition Width="2*" MinWidth="35"/>
                    <ColumnDefinition Width="*" MinWidth="35"/>
                    <ColumnDefinition Width="*" MinWidth="35"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="20*"/>
                    <RowDefinition Height="8*" MinHeight="5"/>
                    <RowDefinition Height="8*" MinHeight="5"/>
                    <RowDefinition Height="8*" MinHeight="5"/>
                    <RowDefinition Height="8*" MinHeight="5"/>
                </Grid.RowDefinitions>
				<Viewbox x:Name="Name" Grid.Column="1" Grid.RowSpan="5">
                    <TextBlock Foreground="{Binding Id, Converter={StaticResource NamePortColorConverter}, Mode=Default}" Text="{Binding Name}"/>
				</Viewbox>
				<Rectangle Fill="{Binding Id, Converter={StaticResource NamePortColorConverter}, Mode=Default}" HorizontalAlignment="Center" Grid.RowSpan="5" VerticalAlignment="Stretch" Width="4" StrokeThickness="0" RenderTransformOrigin="0.5,0.5" Margin="15.5,0">
					<Rectangle.RenderTransform>
						<TransformGroup>
							<ScaleTransform/>
							<SkewTransform/>
							<RotateTransform Angle="10"/>
							<TranslateTransform/>
						</TransformGroup>
					</Rectangle.RenderTransform>
				</Rectangle>
				<Viewbox x:Name="Bauds" Grid.Column="2" Grid.ColumnSpan="2" MinWidth="50">
					<TextBlock Foreground="White" Text="{Binding Baudrate}"/>
				</Viewbox>
				<Viewbox HorizontalAlignment="Left" Margin="130,0,0,0" Grid.Column="3" Width="40" Height="20">
					<Path Fill="#FFFFFFFF" Stretch="Fill">
						<Path.Data>
							<PathGeometry Figures="m 971.11963 728.10043 -142.94089 0 c 0 0 -10e-6 -315.78154 -225.84236 -385.98801 -6.43487 -2.00038 -11.80302 36.36635 -31.80302 356.36635 -1.54553 24.72853 -30 60 -100 35 -40 -15 -55.96167 -45.00024 -40 -85 100 -230 133.32963 -315.5107 129.17758 -316.15118 -16.66103 -2.57008 -34.35603 -3.93485 -53.14918 -3.93485 -384.15363 0 -375.21982 399.70769 -375.21982 399.70769 l -26.80141 0 c 0 0 0 -521.35786 419.88884 -521.35786 26.70613 0 61.35848 3.21835 85.10399 6.7362 0.24131 0.0358 -49 120 -49 120 l 55 -140 -20 165 c 0 0 15.51898 -144.63059 16 -144.52563 341.70398 74.5551 359.58627 514.14729 359.58627 514.14729 z" FillRule="NonZero"/>
						</Path.Data>
					</Path>
				</Viewbox>
				<TextBlock x:Name="Default" Grid.Column="0" Foreground="White" Text="{Binding Id, Converter={StaticResource DefaultConverter}, Mode=Default}" Margin="0,0,0,100" Grid.RowSpan="5" RenderTransformOrigin="0.5,0.5">
					<TextBlock.RenderTransform>
						<TransformGroup>
							<ScaleTransform/>
							<SkewTransform/>
							<RotateTransform Angle="-80"/>
							<TranslateTransform/>
						</TransformGroup>
					</TextBlock.RenderTransform>
				</TextBlock>
				
				<Viewbox x:Name="Parity" Grid.Column="2" Grid.Row="1" HorizontalAlignment="Right">
					<TextBlock Foreground="White" Text="Parity : "/>
				</Viewbox>
				<Viewbox x:Name="parity" Grid.Column="3" Grid.Row="1" HorizontalAlignment="Left">
					<TextBlock Foreground="White" Text="{Binding Parity}"/>
				</Viewbox>
				<Viewbox x:Name="Databits_" Grid.Column="2" Grid.Row="2" HorizontalAlignment="Right" >
					<TextBlock Foreground="White" Text="Databits : " HorizontalAlignment="Right"/>
				</Viewbox>				
				<Viewbox x:Name="databits" Grid.Column="3" Grid.Row="2" HorizontalAlignment="Left">
					<TextBlock Foreground="White" Text="{Binding Databits}"/>
				</Viewbox>
				<Viewbox x:Name="Stopbits" Grid.Column="2" Grid.Row="3" HorizontalAlignment="Right">
						<TextBlock Foreground="White" Text="Stopbits : "/>
				</Viewbox>
				<Viewbox x:Name="stopbits" Grid.Column="3" Grid.Row="3" HorizontalAlignment="Left">
					<TextBlock Foreground="White" Text="{Binding Stopbit}"/>
				</Viewbox>
				<Viewbox x:Name="Handshake" Grid.Column="2" Grid.Row="4" HorizontalAlignment="Right" >
					<TextBlock Foreground="White" Text="Handshake : " Grid.Column="1" Grid.Row="4" Grid.ColumnSpan="2"/>
				</Viewbox>
				<Viewbox x:Name="handshake" Grid.Column="3" Grid.Row="4" HorizontalAlignment="Left">
					<TextBlock Foreground="White" Text="{Binding Handshake}"/>
				</Viewbox>
            </Grid>
        </DataTemplate>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" MinHeight="160"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding Id, Converter={StaticResource NamePortColorConverter}, Mode=Default}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding Id, Converter={StaticResource NamePortColorConverter}, Mode=Default}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#7F2672EC"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding Id, Converter={StaticResource NamePortColorConverter}, Mode=Default}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="primaryColor" Color="#292929" />
        <SolidColorBrush x:Key="menuBisColor" Color="#919191"/>
        <SolidColorBrush x:Key="White" Color="#ffffff"/>
        <SolidColorBrush x:Key="Black" Color="#000000"/>
        <SolidColorBrush x:Key="Transparent" Color="Transparent"/>
    </UserControl.Resources>
     <Grid Background="{DynamicResource primaryColor}">
         <!-- Popup "new port"-->
        <Popup Placement="Center" Width="Auto" Height="Auto" IsOpen="{Binding IsOpen}" OpacityMask="Black">
            <Grid Background="#dd515151" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button  Grid.ColumnSpan="2" HorizontalAlignment="Right" VerticalAlignment="Top" Content="X" Command="{Binding Path=ClosePopUp}" Width="30" Height="30" />
                <Label Grid.ColumnSpan="2" VerticalAlignment="Top" HorizontalContentAlignment="Center" Foreground="White" Margin="50,0,50,0" Content="Configuration Settings"/>
                <StackPanel Margin="0,40,0,0">
                    <Label Foreground="{StaticResource White}" Margin="40,20,0,15" Content="Name"/>
                    <Label Foreground="{StaticResource White}" Margin="40,0,0,15" Content="Speed (baud)"/>
                    <Label Foreground="{StaticResource White}" Margin="40,0,0,15" Content="Data bits"/>
                    <Label Foreground="{StaticResource White}" Margin="40,0,0,15" Content="Stop bits"/>
                    <Label Foreground="{StaticResource White}" Margin="40,0,0,15" Content="Parity"/>
                    <Label Foreground="{StaticResource White}" Margin="40,0,0,15" Content="Handhsake"/>
                </StackPanel>
                <StackPanel Margin="0,40,0,0" Grid.Column="1" >
                    <ComboBox SelectedItem="{Binding SelectedName}" ItemsSource="{Binding PortName}" SelectedIndex="0"  Width="100" Margin="0,20,0,10"/>
                    <ComboBox SelectedIndex="0" SelectedItem="{Binding SelectedBauds}" Width="100" ItemsSource="{Binding EnumBauds}" Margin="10"/>
                    <ComboBox SelectedIndex="0" SelectedItem="{Binding SelectedDatabits}" Width="100" ItemsSource="{Binding EnumDatabits}" Margin="10"/>
                    <ComboBox SelectedIndex="0" SelectedItem="{Binding SelectedStopbits}" Width="100" ItemsSource="{Binding EnumStopbit}" Margin="10"/>
                    <ComboBox SelectedIndex="0" SelectedItem="{Binding SelectedParity}" Width="100" ItemsSource="{Binding EnumParity}" Margin="10"/>
                    <ComboBox SelectedIndex="0" SelectedItem="{Binding SelectedHandshake}" Width="100" ItemsSource="{Binding EnumHandshake}" Margin="10"/>
                    <Button Margin="30" HorizontalAlignment="Center" Content="Validate" Command="{Binding Path=ValidationNewPort}" Width="100" Height="30"/>
                </StackPanel>
            </Grid>
        </Popup>
        <Grid Margin="20,20,20,20" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="75*" MinHeight="75"/>
                <RowDefinition Height="436*"  MinHeight="100"/>
                <RowDefinition Height="38*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.45*"/>
                <ColumnDefinition Width="0.01*"/>
                <ColumnDefinition Width="0.45*"/>
                <ColumnDefinition Width="0.04*" MinWidth="50"/>
            </Grid.ColumnDefinitions>
            <Viewbox Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Top" HorizontalAlignment="Center" >
            	<TextBlock Foreground="{StaticResource White}" Text="{Binding GpsTrame}"  VerticalAlignment="Top"/>
            </Viewbox>
            <!-- Delete item-->
            <Button Margin="20,0,0,0" Grid.Column="0" Grid.Row="2" Width="60" HorizontalAlignment="Left" Command="{Binding Path=ListBoxDeleteItem}" Background="{DynamicResource Transparent}" >
                <Viewbox Height="35.871" Width="60">
                    <Path Stretch="Uniform" UseLayoutRounding="False" Fill="{StaticResource White}" Data="F1 M 85.9033,59.998L 66.1689,40.2646L 66.1689,95.9873L 6.16895,95.9873L 6.16895,35.9873L 61.8916,35.9873L 56.0391,30.1338L 34.707,8.80176L 38.9727,4.53516L 60.3057,25.8672L 64.5713,21.6006L 73.1025,30.1338L 68.8379,34.3994L 90.1699,55.7314L 85.9033,59.998 Z M 60.167,89.9893L 60.167,41.9893L 48.167,41.9893L 48.167,89.9893L 60.167,89.9893 Z M 42.167,89.9893L 42.167,41.9893L 30.167,41.9893L 30.167,89.9893L 42.167,89.9893 Z M 24.167,89.9893L 24.167,41.9893L 12.167,41.9893L 12.167,89.9893L 24.167,89.9893 Z M 7.20605,14.2881C 4.0918,11.8008 0,12.0664 0,12.0664L 0,0C 0,0 5.49609,0.59082 12.0664,6.0332C 15.5547,8.9209 20.7295,15.6221 20.9824,15.9502L 25.9014,11.0303L 30.1689,32.3623L 8.83691,28.0957L 15.0684,21.8643C 14.3906,21.0879 11.0869,17.3838 7.20605,14.2881 Z "/>
				</Viewbox>
            </Button>
            <Button Grid.Column="0" Grid.Row="2" Margin="100,0,0,0" Width="58.667" HorizontalAlignment="Left" Command="{Binding Path=ListBoxDefaultItem}" Background="{DynamicResource Transparent}">
                <Viewbox Height="43.109">
					<Path Stretch="Uniform" Fill="{StaticResource White}" Data="F1 M 90.2096,1.52588e-005L 108,17.7904L 108,40L 97.3333,40L 97.3333,22.2096L 85.7904,10.6667L 77.3333,10.6667L 77.3333,50.6667L 26.6667,50.6667L 26.6667,10.6667L 10.6667,10.6667L 10.6667,97.3333L 56.9479,97.3333L 66.5827,108L 0,108L 0,1.52588e-005L 90.2096,1.52588e-005 Z M 68,40L 68,10.6667L 57.3333,10.6667L 57.3333,40L 68,40 Z M 108,81.3334L 133.333,81.3334L 96,122.667L 58.6666,81.3334L 84,81.3334L 84,50.6667L 108,50.6667L 108,81.3334 Z " Height="157.326"/>
                </Viewbox>
            </Button>
            <ListBox Background="{StaticResource Transparent}" BorderThickness="0" ItemsSource="{Binding ObjPorts}" SelectedItem="{Binding SelectedPort}" Foreground="{StaticResource White}" ItemContainerStyle="{DynamicResource ListBoxItemStyle1}" ItemTemplate="{DynamicResource DataTemplateListPort}" Grid.ColumnSpan="2" Grid.RowSpan="2" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
            <Button Background="{StaticResource Transparent}" BorderThickness="0"  Grid.Column="3" Command="{Binding Path=OpenPopUp}" Height="55" VerticalAlignment="Top">
                <Viewbox>
                    <Path Fill="{StaticResource White}" Margin="2" Stretch="Uniform" Data="F1 M 35,19L 41,19L 41,35L 57,35L 57,41L 41,41L 41,57L 35,57L 35,41L 19,41L 19,35L 35,35L 35,19 Z "/>
                </Viewbox>
            </Button>
            <ToggleButton Margin="0,10,0,0" Grid.Row="2" Background="{DynamicResource secondColor}" HorizontalAlignment="Right" Content="{Binding OnOffButton}"  Width="82" Command="{Binding Path=Acquisition}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Foreground="White"/>
        </Grid>
    </Grid>
</UserControl>
